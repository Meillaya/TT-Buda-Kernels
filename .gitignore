# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyTorch
#  project, you typically want to ignore the .idea directory entirely.
.idea/

# C++ build artifacts
*.o
*.obj
*.exe
*.dll
*.dylib
*.a
*.lib
*.pdb
*.ilk
*.exp
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
Makefile
*.cmake
!CMakeLists.txt

# Visual Studio / VS Code
.vs/
.vscode/
*.vcxproj*
*.sln
*.user

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Machine Learning / AI specific
# Datasets
data/
datasets/
*.h5
*.hdf5
*.pkl
*.pickle

# Model checkpoints and weights
checkpoints/
models/
weights/
*.pth
*.pt
*.ckpt
*.safetensors
*.bin
*.model

# Logs and tensorboard
logs/
runs/
tensorboard_logs/
lightning_logs/
wandb/
mlruns/
*.tfevents*

# Profiling and benchmarking
*.prof
*.profile
profiling_results/
benchmark_results/
*.perf
*.nvprof

# CUDA
*.cubin
*.fatbin
*.ptx

# Development and testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
test_results/
test_reports/

# Documentation builds
docs/build/
docs/_build/
docs/source/_build/
*.pdf

# Temporary files
tmp/
temp/
*.tmp
*.temp
*.swp
*.swo
*~

# Editor backups
*.bak
*.orig

# Package managers
node_modules/
.pnpm-store/
.yarn/
package-lock.json
yarn.lock

# Docker
*.tar
docker-compose.override.yml

# Environment and configuration
.env*
config.local.yml
secrets.yml
.secrets/

# Performance and debugging
*.trace
*.out
*.log
core.*
vgcore.*

# IDE and development tools
.history/
.devcontainer/

# OS generated files
.Spotlight-V100
.Trashes

# Project specific
# Add any project-specific files here
experiments/
results/
outputs/
artifacts/

# uv specific
.uv/
uv.lock 

.specstory/
.cursorindexingignore